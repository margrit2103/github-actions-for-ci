name: ci-sql-regression-margrit-test
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      dbtag:
        description: Tag for quantsolutions/testdb image

jobs:
  # This workflow contains a single job called "build"
  sql-regression:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout goodx repository.  Create _dump directory in this repository.
        uses: actions/checkout@v2

      - run: mkdir -p ./_dump
      - run: echo hello world > ./_dump/world.txt        

      - name: Collect settings
        id: settings
        run: |
          while IFS= read -r l; do
            echo "$l" | awk '{ print "::set-output name="$1"::"$2 }';
            echo "$l" | awk '{ print "@@@setting "$1" "$2 }';
          done <<< $(cat << EOF
            dbimg quantsolutions/testdb:${{ github.event.inputs.dbtag || 'latest' }}
            branch $(git rev-parse --abbrev-ref $(git describe --all))
            githash $(git rev-parse HEAD)
            committed $(git show -s --format=%ct)
          EOF
          )      

      #- name: Login to Docker Hub
        #uses: docker/login-action@v1        
        #with:
          #username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}          
      
      
      - name: Checkout docker. GoodX Repository is shared in folder ./goodx_repo
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: ${{ steps.settings.outputs.dbimg }}
          shell: bash
          options: -e PGUSER=postgres -e PGHOST=localhost -e PGPORT=5432 -e PGPASSWORD=masterkey -e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin -e PGDATA=/var/lib/postgresql/pgdata -v ${{ github.workspace }}:/goodx_repo
          run: |
              echo ... writing to file ./goodx_repo/_dump/world_v3.txt
              echo "hello wÃªreld jou ou yster" > ./goodx_repo/_dump/world_v3.txt
              echo $PGPASSWORD  $PGDATA
              
              /bin/sh -c su postgres -c ' /usr/lib/postgresql/12/bin/pg_ctl start '
              echo .. set postgre usermod
              usermod -s /bin/bash postgres              
              echo ....trying su              
              su - postgres
              echo whomai 
              whoami
              
              echo ... dumping lysglb.mpy 
              psql -U postgres -d goodxweb -c "select * from lysglb.mpy" > ./goodx_repo/_dump/lysglb_mpy.txt
          
      - name: Upload artifacts
        timeout-minutes: 10
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: dump
          path: _dump

